<?php
// Prevent direct access to this file
if (!defined('ABSPATH')) {
    exit;
}

function aiseo_add_internal_links() {
    global $wpdb;

    // Get all posts generated by our plugin
    $posts = $wpdb->get_results("
        SELECT ID, post_title, post_content 
        FROM {$wpdb->posts} p
        JOIN {$wpdb->postmeta} pm ON p.ID = pm.post_id
        WHERE pm.meta_key = '_aiseo_generated'
        AND p.post_status = 'publish'
    ");

    foreach ($posts as $post) {
        $updated_content = $post->post_content;

        foreach ($posts as $link_post) {
            if ($post->ID !== $link_post->ID) {
                $pattern = '/\b' . preg_quote($link_post->post_title, '/') . '\b(?![^<]*>)/i';
                $replacement = '<a href="' . get_permalink($link_post->ID) . '">' . $link_post->post_title . '</a>';
                $updated_content = preg_replace($pattern, $replacement, $updated_content, 1);
            }
        }

        if ($updated_content !== $post->post_content) {
            wp_update_post([
                'ID' => $post->ID,
                'post_content' => $updated_content
            ]);
        }
    }

    aiseo_log("Internal linking process completed.");
}

function aiseo_add_internal_links_to_post($post_id) {
    global $wpdb;

    // Get the current post
    $current_post = get_post($post_id);

    // Get all other AI-generated posts with their AI SEO keywords
    $other_posts = $wpdb->get_results("
        SELECT p.ID, p.post_title, GROUP_CONCAT(t.name) AS keywords
        FROM {$wpdb->posts} p
        JOIN {$wpdb->postmeta} pm ON p.ID = pm.post_id AND pm.meta_key = '_aiseo_generated'
        LEFT JOIN {$wpdb->term_relationships} tr ON p.ID = tr.object_id
        LEFT JOIN {$wpdb->term_taxonomy} tt ON tr.term_taxonomy_id = tt.term_taxonomy_id AND tt.taxonomy = 'aiseo_keyword'
        LEFT JOIN {$wpdb->terms} t ON tt.term_id = t.term_id
        WHERE p.post_status = 'publish' AND p.ID != {$post_id}
        GROUP BY p.ID
    ");

    if (empty($other_posts)) {
        return ['status' => 'error', 'message' => 'No other AI-generated posts found to link to.'];
    }

    $updated_content = $current_post->post_content;
    $links_added = 0;
    $potential_links = 0;

    foreach ($other_posts as $link_post) {
        $potential_links++;
        $keywords = $link_post->keywords ? explode(',', $link_post->keywords) : [];
        $keywords[] = $link_post->post_title; // Add the post title as a potential keyword

        foreach ($keywords as $keyword) {
            $keyword = trim($keyword);
            if (strlen($keyword) < 3) continue; // Skip very short keywords

            $pattern = '/\b' . preg_quote($keyword, '/') . '\w*\b(?![^<]*>)/i';
            $replacement = '<a href="' . get_permalink($link_post->ID) . '">${0}</a>';
            $new_content = preg_replace($pattern, $replacement, $updated_content, 1, $count);
            
            if ($count > 0) {
                $updated_content = $new_content;
                $links_added++;
                break; // Only add one link per post
            }
        }
    }

    if ($links_added > 0) {
        wp_update_post([
            'ID' => $post_id,
            'post_content' => $updated_content
        ]);
        return [
            'status' => 'success',
            'message' => "{$links_added} internal links added out of {$potential_links} potential posts.",
            'content' => $updated_content
        ];
    } else {
        return [
            'status' => 'info',
            'message' => "No new links added. Checked {$potential_links} potential posts, but no suitable anchor text was found."
        ];
    }
}